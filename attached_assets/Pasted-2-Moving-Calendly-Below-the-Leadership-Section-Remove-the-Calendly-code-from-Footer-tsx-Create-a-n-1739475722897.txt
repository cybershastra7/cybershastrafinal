2. Moving Calendly Below the Leadership Section
Remove the Calendly code from Footer.tsx.
Create a new section (or component) below the Leadership section (e.g., in the same file or in a dedicated component).
Embed the Calendly code there.
For example, if you have a Leadership.tsx component, you can place the Calendly section right after it in your main page component (Home.tsx or whichever file houses the layout):

tsx
Copy
Edit
// Home.tsx (or the file where you render Leadership and Contact sections)

import React from 'react';
import Leadership from './Leadership';
// If using Next.js for scripts, uncomment the next line
// import Script from 'next/script';

const Home: React.FC = () => {
  return (
    <div>
      {/* Hero Section, etc. */}
      
      <Leadership />

      {/* Calendly Section Below Leadership */}
      <section id="calendly-section" className="my-12 py-8 border-t border-gray-700">
        <h2 className="text-2xl font-bold text-center mb-6">Schedule a Meeting</h2>
        <div className="w-full max-w-4xl mx-auto">
          {/* Calendly Inline Widget */}
          <div
            className="calendly-inline-widget"
            data-url="https://calendly.com/cybershastra7/30min"
            style={{ minWidth: '320px', height: '700px' }}
          />
        </div>

        {/* For React (Create React App), you can load this script in public/index.html instead. */}
        <script
          type="text/javascript"
          src="https://assets.calendly.com/assets/external/widget.js"
          async
        ></script>

        {/*
          If you're using Next.js, comment out the <script> above and use:

          <Script
            src="https://assets.calendly.com/assets/external/widget.js"
            strategy="lazyOnload"
          />

          Make sure you imported 'next/script' at the top:
          import Script from 'next/script';
        */}
      </section>

      {/* Contact Us section below */}
      <section>
        {/* Contact info, etc. */}
      </section>
    </div>
  );
};

export default Home;
This places the Calendly section between Leadership and Contact Us. If you prefer it before Contact Us, just swap the order.

3. Smooth Scrolling From “Get Started”
In your Hero or Navbar component (where the “Get Started” button is), ensure the button’s onClick scrolls to the new Calendly section:

tsx
Copy
Edit
<Button
  size="lg"
  onClick={() => {
    const element = document.getElementById('calendly-section');
    if (element) {
      element.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  }}
  className="bg-red-600 hover:bg-red-700 text-white text-lg px-8 py-6"
>
  Get Started
</Button>
Now, when the user clicks Get Started, it will smoothly scroll to #calendly-section in the same page.

4. Final Prompt for Replit AI
You can copy/paste the following prompt for Replit AI to perform these exact steps:

Prompt:

Remove the Calendly code from Footer.tsx.
Create a new section or component for Calendly below the Leadership section (between Leadership and Contact Us).
Use the following Calendly inline embed code:
html
Copy
Edit
<div
  class="calendly-inline-widget"
  data-url="https://calendly.com/cybershastra7/30min"
  style="min-width:320px;height:700px;"
></div>
<script
  type="text/javascript"
  src="https://assets.calendly.com/assets/external/widget.js"
  async
></script>
Make sure the <script> actually runs by either placing it in public/index.html (for CRA) or using <Script src=\"...\" /> if using Next.js.
Keep the same id=\"calendly-section\" so the "Get Started" button can scroll smoothly to it.
Confirm the widget loads properly and the 404 error is gone.
Provide me with the updated code for the relevant files.
That should ensure the Calendly widget is visible below the Leadership section and that clicking “Get Started” scrolls to it properly. If you have any issues, double-check that:

You’re not referencing a missing route (it should just be an id on the same page).
The script is loading in an environment where it can execute (for Next.js, use <Script> or place in _document.tsx).
The <div> with the calendly-inline-widget class is present in your rendered DOM.
